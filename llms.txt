**Ollama Text Compressor**

一个使用 Go 编写的工具，将大型文本文件分块并通过 Ollama API 进行压缩处理。支持并发处理和两种 API 端点（`generate` 和 `chat`），能高效地将文本压缩而不丢失重要信息。

**功能特性**

* 文本分块处理
* 并发处理（可配置）
* 错误重试机制
* 进度条显示
* 灵活的配置选项

**安装**

1. 前提条件：Go 1.16 或更高版本、运行中的 Ollama 服务
2. 克隆仓库并编译项目
3. 可选：将可执行文件移动到 PATH 中

**使用方法**

* 基本用法：`./ollama-text-compressor -input <输入文件> -output <输出文件>`
* 命令行参数：
	+ `-input`（必填）：输入文件路径
	+ `-output`（默认）：输出文件路径
	+ `-model`（默认）：使用的 Ollama 模型名称
	+ `-api`（默认）：Ollama API 端点
	+ `-url`（默认）：Ollama API 基础 URL

**注意事项**

* 确保 Ollama 服务正在运行，并且指定的模型已拉取。

这里是压缩后的文本：

"端点：期望单次 JSON 响应。如遇解析错误，请检查 Ollama API。"

这里是压缩后的文本：

**贡献**

* Fork 项目并创建功能分支
* 提交更改并推送到分支
* 提交 Pull Request

**许可证**

* 本项目采用 MIT 许可证

**致谢**

* Ollama：提供语言模型 API
* schollz/progressbar：提供进度条

**使用说明**

1. 将 README 内容保存为 `README.md` 文件
2. 替换 `git clone` 命令中的用户名和仓库名
3. 添加自定义许可证文件（如果需要）